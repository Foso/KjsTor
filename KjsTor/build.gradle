
plugins {
    id 'org.jetbrains.kotlin.js'
}
group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
    mavenCentral()
}

dependencies {
    implementation project(":nodektor")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-js:1.3.72"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.3.7'
    implementation 'io.ktor:ktor-utils-js:1.3.2'
    implementation 'io.ktor:ktor-http-js:1.3.2'
    implementation 'io.ktor:ktor-http-cio-js:1.3.2'
    implementation 'io.ktor:ktor-io-js:1.3.2'
   // implementation "io.ktor:ktor-client-js:1.3.2"
}



kotlin {
    //use js() for a multiplatform project
    target {
        nodejs(){
            configure([compilations.main]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                   // outputFile = "${project.buildDir.path}/js/${project.name}.js"
                    moduleKind = "commonjs"
                    main = "call"
                }}

        }


    }

}

def outputDir = "${projectDir}/src/main/web"
def inputDir = "${projectDir}/build/js/${project.name}.js"

task assembleJs(type: Copy) {
    configurations.compile.each { File file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") ||
                        !path.startsWith("META-INF/"))
            }
        })
    }
    from inputDir
    into "${outputDir}"

}

//assemble.dependsOn assembleJs